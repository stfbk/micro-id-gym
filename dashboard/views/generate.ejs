<!DOCTYPE html>
<html>
  <head>
    <title>Environment successfully generated</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/dashboard.css"/>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.13.0/css/all.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.13.0/css/v4-shims.css">


    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
  </head>
  <body>
    <div class="container center-align">

      <hr>

      <h4> Environment successfully generated! </h4>

      <hr>
      <div class="left-align">
        The customized environment can be found at: <span class="monospace text command"><%= filename %></span> <br><br>

        Perform the following steps to setup the MIG:
        <ul>
          <li><b>Proxy</b>
            <ul>
              <li>In case your OS is Linux or MAC OSx, please run the following two curl command to donwload the Proxy
              <li> open the terminal and reach the folder <span class="monospace text"><%= filename %>/frontend/proxy</span>
              <li> run <span class="monospace text command">curl -c ./cookie -s -L "https://drive.google.com/uc?export=download&id=1JbBh5EhfEAEd7XxswDFBTzqIPBmX6qKp" > <%= filename %>/frontend/proxy/cookie</span>
              <li> run <span class="monospace text command">curl -Lb ./cookie "https://drive.google.com/uc?export=download&confirm=`awk '/download/ {print $NF}' ./cookie`&id=1JbBh5EhfEAEd7XxswDFBTzqIPBmX6qKp" -o burpsuite_community_v2020.2.1.jar</span>
              <li>In case your OS is Windows, please donwload the Proxy directly from this <a href="https://drive.google.com/uc?export=download&id=1JbBh5EhfEAEd7XxswDFBTzqIPBmX6qKp" target="_blank">URL</a> and copy it in <span class="monospace text"><%= filename %>/frontend/proxy</span>
              <li> after you download the Proxy tool now you can run it by executing the command in the next point                 
              <li> run <span class="monospace text command">java --illegal-access=permit -jar burpsuite_community_v2020.2.1.jar --user-config-file=user-options.json --config-file=project-options.json &amp;</span>
              <li> configure your browser to use the proxy at port <span class="monospace text command"><%= proxyPort %></span>
              (<a href="https://portswigger.net/support/configuring-chrome-to-work-with-burp">Chrome</a>,
              <a href="https://portswigger.net/support/configuring-internet-explorer-to-work-with-burp">IE</a>,
              <a href="https://portswigger.net/support/configuring-firefox-to-work-with-burp">Firefox</a>
              also to allow to intercept localhost HTTP traffic, open Firefox write <span class="monospace text command">about:config</span> and set <span class="monospace text command">network.proxy.allow_hijacking_localhost</span> to true,
              <a href="https://portswigger.net/support/configuring-safari-to-work-with-burp">Safari</a>).
            </ul>

          <li><b>Tools</b>
            <ul>
              <li> open the terminal and reach the folder <span class="monospace text"><%= filename %>/frontend/tools</span>
              <li> run <span class="monospace text command">docker-compose up --build --remove-orphans</span>
              <li> open the browser
              <li> visit <span class="monospace text command">localhost:<%= mscPort %></span> to use the MSC Drawer
              <li> login into the drawer with the password <span class="monospace text command"><%= sessionId %></span>
              <li> visit <span class="monospace text command">localhost:<%= stixPort %></span> to use STIX visualizer
            </ul>
          <li><b>System Under Test</b>
            In case of a sandboxed IdM system <i>created</i> using the instances available in MIG Backend:
            <ul>
              <li>add the following entries to the host file of your machine
                  <ul>
                    <li><span class="monospace text command"> 127.0.0.1 identityprovider </span>
                    <li><span class="monospace text command"> 127.0.0.1 client </span>
                  </ul>
              <li> open the terminal and reach the folder <span class="monospace text"><%= filename %>/sut</span>
              <li> run <span class="monospace text command">docker-compose up --build --remove-orphans</span>
              <li> open the browser
              <li> visit the Client at <span class="monospace text command">localhost:<%= clientPort %></span>
              <li> visit the Identity Provider at <span class="monospace text command">localhost:<%= idpPort %></span>
              <li> to login at the Identity Provider use the following user details  <span class="monospace text"><%= username %>:<%= password %></span>
            </ul>

            In case of a sandboxed IdM system <i>uploaded</i> by the user:
            <ul>
              <li> open the terminal and reach the folder sut
              <li> move to the directory where the docker-compose.yml file is located
              <li> run docker-compose up --build --remove-orphans
            </ul>


        </ul>

        All these instruction are also available in the README file inside <span class="monospace text command"><%= filename %></span> folder.



      </div>

      <hr>


    </div>
  </body>
</html>
